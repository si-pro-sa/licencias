{"version":3,"sources":["webpack:///./resources/js/api/interceptors.js","webpack:///./resources/js/api/licenciaApi.js"],"names":["setupInterceptors","axiosInstance","interceptors","request","use","config","token","store","getters","headers","Authorization","concat","metadata","startTime","Date","getTime","process","console","log","method","toUpperCase","url","params","data","error","Promise","reject","response","duration","status","_error$response","_error$response2","dispatch","router","push","name","query","redirect","currentRoute","fullPath","message","apiClient","axios","create","baseURL","timeout","Accept","getLicencias","arguments","length","undefined","get","then","handleError","getLicencia","id","Error","getLicenciasPorAgente","agenteId","getLicenciasPorAgenteYTipo","obj","idagente","tipoLicencia","getLicenciasTotales","getLicenciasDependientes","URLSearchParams","_ref","options","page","itemsPerPage","sortBy","sortDesc","append","filters","_obj$filters","efector","codigo_nombre","documento","apellido_nombre","dias","idlicencia","fecha_pedido_inicio","fecha_pedido_final","primer_visado","segundo_visado","fecha_efectiva_inicio","fecha_efectiva_final","cuarta_visado","fecha_interrupcion_inicio","toLowerCase","dependencia","getLicenciasDependientesCapacitacion","_obj$filters2","alcance","caracter","tipo_evento","evento_nombre","evento_lugar","getLicenciasConsulta","fecha_desde","fecha_hasta","tipo_licencias","getLicenciasMensuales","mes","getLicenciasRetroactiva","crearLicencia","licenciaData","salud_ocupacional","post","_licenciaData$","includes","idtipoLicencia","codigo","licencia_id","formData","actualizarLicencia","put","_licenciaData$2","primerVisadoTodo","segundoVisadoTodo","desvisarLicencia","licencia","cambiarEstadoLicencia","nuevoEstado","patch","estado","eliminarLicencia","exportXLS","getDiasPosibles","getFeriados","getPersonasActivas","arr","getPersonasDiscapacitadaActivas"],"mappings":"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","file":"0.js","sourcesContent":["/**\n * @file api/interceptors.js\n * @description Interceptores axios para peticiones API\n */\nimport store from '../store';\nimport router from '../router';\n\n/**\n * Configura interceptores axios\n * @param {Object} axiosInstance - Instancia de axios\n */\nexport function setupInterceptors(axiosInstance) {\n    // Interceptor de peticiones\n    axiosInstance.interceptors.request.use(\n        (config) => {\n            // Añadir encabezado de autorización con token JWT si está disponible\n            const token = store.getters['auth/getToken'];\n            if (token) {\n                config.headers.Authorization = `Bearer ${token}`;\n            }\n\n            // Añadir marca de tiempo para depuración\n            config.metadata = { startTime: new Date().getTime() };\n\n            // Registrar peticiones salientes en desarrollo\n            if (process.env.NODE_ENV !== 'production') {\n                console.log('Petición API:', {\n                    method: config.method.toUpperCase(),\n                    url: config.url,\n                    params: config.params,\n                    data: config.data,\n                });\n            }\n\n            return config;\n        },\n        (error) => {\n            console.error('Error de petición:', error);\n            return Promise.reject(error);\n        },\n    );\n\n    // Interceptor de respuestas\n    axiosInstance.interceptors.response.use(\n        (response) => {\n            // Calcular duración de la petición\n            const duration =\n                new Date().getTime() - response.config.metadata.startTime;\n\n            // Registrar tiempo de respuesta en desarrollo\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(`Respuesta API (${duration}ms):`, {\n                    status: response.status,\n                    data: response.data,\n                });\n            }\n\n            return response;\n        },\n        (error) => {\n            // Manejar errores 401 No autorizado redirigiendo al login\n            if (error.response && error.response.status === 401) {\n                store.dispatch('auth/logout');\n                router.push({\n                    name: 'login',\n                    query: { redirect: router.currentRoute.fullPath },\n                });\n            }\n\n            // Registrar errores API\n            console.error('Error API:', {\n                message: error.message,\n                status: error.response?.status,\n                data: error.response?.data,\n            });\n\n            return Promise.reject(error);\n        },\n    );\n}\n","/**\n * @file api/licenciaApi.js\n * @description Servicio API para gestión de licencias\n */\nimport axios from 'axios';\nimport { handleError } from './errorHandler';\nimport { setupInterceptors } from './interceptors';\nimport moment from 'moment';\n\n// Cliente axios con configuración predeterminada\nconst apiClient = axios.create({\n    baseURL: '/api',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n});\n\n// Configurar interceptores\nsetupInterceptors(apiClient);\n\n/**\n * Servicio API de licencias\n * @namespace LicenciaApi\n */\nexport default {\n    /**\n     * Obtiene todas las licencias con filtrado opcional\n     * @memberof LicenciaApi\n     * @param {Object} params - Parámetros de consulta\n     * @param {number} params.page - Número de página\n     * @param {string} params.search - Término de búsqueda\n     * @param {string} params.estado - Estado de la licencia\n     * @returns {Promise<Object>} Respuesta con datos de licencias\n     */\n    getLicencias(params = {}) {\n        return apiClient\n            .get('/licencias', { params })\n            .then((response) => response.data)\n            .catch((error) => handleError(error, 'Error al obtener licencias'));\n    },\n\n    /**\n     * Obtiene una licencia por ID\n     * @memberof LicenciaApi\n     * @param {number|string} id - ID de la licencia\n     * @returns {Promise<Object>} Datos de la licencia\n     */\n    getLicencia(id) {\n        if (!id) throw new Error('Se requiere el ID de la licencia');\n\n        return apiClient\n            .get(`/licencias/${id}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, `Error al obtener la licencia ${id}`),\n            );\n    },\n\n    /**\n     * Obtiene las licencias de un agente específico\n     * @memberof LicenciaApi\n     * @param {number|string} agenteId - ID del agente\n     * @param {Object} params - Parámetros adicionales\n     * @returns {Promise<Object>} Licencias del agente\n     */\n    getLicenciasPorAgente(agenteId, params = {}) {\n        if (!agenteId) throw new Error('Se requiere el ID del agente');\n\n        return apiClient\n            .get(`/agentes/${agenteId}/licencias`, { params })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(\n                    error,\n                    `Error al obtener licencias del agente ${agenteId}`,\n                ),\n            );\n    },\n\n    /**\n     * Obtiene licencias de un agente por tipo de licencia\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con parámetros\n     * @param {number|string} obj.idagente - ID del agente\n     * @param {number|string} obj.tipoLicencia - ID del tipo de licencia\n     * @returns {Promise<Object>} Licencias del agente del tipo específico\n     */\n    getLicenciasPorAgenteYTipo(obj) {\n        if (!obj.idagente) throw new Error('Se requiere el ID del agente');\n        if (!obj.tipoLicencia)\n            throw new Error('Se requiere el tipo de licencia');\n\n        return apiClient\n            .get(`/api/licencias/agente/${obj.idagente}/${obj.tipoLicencia}`)\n            .then((response) => response.data)\n            .catch((error) => handleError(error, 'Error al obtener licencias'));\n    },\n\n    /**\n     * Obtiene las licencias totales de un agente\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con parámetros\n     * @param {number|string} obj.idagente - ID del agente\n     * @returns {Promise<Object>} Todas las licencias del agente\n     */\n    getLicenciasTotales(obj) {\n        if (!obj.idagente) throw new Error('Se requiere el ID del agente');\n\n        return apiClient\n            .get(`/api/licencias/agente/${obj.idagente}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener licencias totales'),\n            );\n    },\n\n    /**\n     * Obtiene licencias por dependencia con filtros\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con parámetros y filtros\n     * @returns {Promise<Object>} Licencias filtradas\n     */\n    getLicenciasDependientes(obj) {\n        let params = new URLSearchParams();\n\n        // Parámetros de paginación y ordenamiento\n        const { page, itemsPerPage, sortBy, sortDesc } = obj.options || {};\n        if (page) params.append('page', page);\n        if (itemsPerPage) params.append('itemsPerPage', itemsPerPage);\n        if (sortBy) params.append('sortBy', sortBy);\n        if (sortDesc) params.append('sortDesc', sortDesc);\n\n        // ID del agente\n        if (obj.idagente) params.append('idagente', obj.idagente);\n\n        // Aplicar filtros si existen\n        if (obj.filters) {\n            const {\n                efector,\n                codigo_nombre,\n                documento,\n                apellido_nombre,\n                tipoLicencia,\n                dias,\n                idlicencia,\n                fecha_pedido_inicio,\n                fecha_pedido_final,\n                primer_visado,\n                segundo_visado,\n                fecha_efectiva_inicio,\n                fecha_efectiva_final,\n                cuarta_visado,\n                fecha_interrupcion_inicio,\n            } = obj.filters;\n\n            if (efector) params.append('efector', efector.toUpperCase());\n            if (codigo_nombre)\n                params.append('codigo_nombre', codigo_nombre.toUpperCase());\n            if (documento) params.append('documento', documento);\n            if (apellido_nombre)\n                params.append('apellido_nombre', apellido_nombre.toUpperCase());\n            if (tipoLicencia)\n                params.append('tipoLicencia', tipoLicencia.toLowerCase());\n            if (dias) params.append('dias', dias);\n            if (idlicencia) params.append('idlicencia', idlicencia);\n            if (fecha_pedido_inicio)\n                params.append('fecha_pedido_inicio', fecha_pedido_inicio);\n            if (fecha_pedido_final)\n                params.append('fecha_pedido_final', fecha_pedido_final);\n            if (primer_visado >= 0)\n                params.append('primer_visado', primer_visado);\n            if (segundo_visado >= 0)\n                params.append('segundo_visado', segundo_visado);\n            if (cuarta_visado) params.append('cuarta_visado', cuarta_visado);\n            if (fecha_efectiva_inicio)\n                params.append('fecha_efectiva_inicio', fecha_efectiva_inicio);\n            if (fecha_efectiva_final)\n                params.append('fecha_efectiva_final', fecha_efectiva_final);\n            if (fecha_interrupcion_inicio)\n                params.append(\n                    'fecha_interrupcion_inicio',\n                    fecha_interrupcion_inicio,\n                );\n        }\n\n        // Dependencia\n        if (obj.dependencia) params.append('dependencia', obj.dependencia);\n\n        return apiClient\n            .get('/api/licencias/dependiente/', { params })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener licencias dependientes'),\n            );\n    },\n\n    /**\n     * Obtiene licencias para capacitación\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con parámetros\n     * @returns {Promise<Object>} Licencias de capacitación\n     */\n    getLicenciasDependientesCapacitacion(obj) {\n        let params = new URLSearchParams();\n\n        // Parámetros similares a getLicenciasDependientes\n        // Añadiendo parámetros específicos para capacitación\n        if (obj.filters) {\n            const {\n                alcance,\n                caracter,\n                tipo_evento,\n                evento_nombre,\n                evento_lugar,\n            } = obj.filters;\n\n            if (alcance) params.append('alcance', alcance);\n            if (caracter) params.append('caracter', caracter);\n            if (tipo_evento) params.append('tipoEvento', tipo_evento);\n            if (evento_lugar) params.append('evento_lugar', evento_lugar);\n            if (evento_nombre) params.append('evento_nombre', evento_nombre);\n        }\n\n        // Añadir los demás parámetros como en getLicenciasDependientes\n        // ...\n\n        return apiClient\n            .get('/api/licencias/masivo/capacitacion/', { params })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(\n                    error,\n                    'Error al obtener licencias de capacitación',\n                ),\n            );\n    },\n\n    /**\n     * Obtiene licencias para consulta en un rango de fechas\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con fecha_desde, fecha_hasta y dependencia opcional\n     * @returns {Promise<Object>} Licencias en el rango de fechas\n     */\n    getLicenciasConsulta(obj) {\n        const params = new URLSearchParams();\n        params.append('fecha_desde', obj.fecha_desde);\n        params.append('fecha_hasta', obj.fecha_hasta);\n\n        if (obj.dependencia) {\n            params.append('dependencia', obj.dependencia);\n        }\n\n        if (obj.tipo_licencias) {\n            params.append('tipo_licencias', obj.tipo_licencias);\n        }\n\n        return apiClient\n            .get('/api/licencias/consulta', { params })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener licencias para consulta'),\n            );\n    },\n\n    /**\n     * Obtiene licencias mensuales\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con mes y dependencia opcional\n     * @returns {Promise<Object>} Licencias mensuales\n     */\n    getLicenciasMensuales(obj) {\n        const params = new URLSearchParams();\n        params.append('mes', obj.mes);\n\n        if (obj.dependencia) {\n            params.append('dependencia', obj.dependencia);\n        }\n\n        if (obj.tipo_licencias) {\n            params.append('tipo_licencias', obj.tipo_licencias);\n        }\n\n        return apiClient\n            .get('/api/licencias/consulta/mensual', { params })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener licencias mensuales'),\n            );\n    },\n\n    /**\n     * Obtiene licencias retroactivas\n     * @memberof LicenciaApi\n     * @param {Object} obj - Objeto con mes y dependencia opcional\n     * @returns {Promise<Object>} Licencias retroactivas\n     */\n    getLicenciasRetroactiva(obj) {\n        const params = new URLSearchParams();\n        params.append('mes', obj.mes);\n\n        if (obj.dependencia) {\n            params.append('dependencia', obj.dependencia);\n        }\n\n        if (obj.tipo_licencias) {\n            params.append('tipo_licencias', obj.tipo_licencias);\n        }\n\n        return apiClient\n            .get('/api/licencias/consulta/mensual/retroactiva', { params })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener licencias retroactivas'),\n            );\n    },\n\n    /**\n     * Crea una nueva licencia\n     * @memberof LicenciaApi\n     * @param {Object} licenciaData - Datos de la licencia\n     * @returns {Promise<Object>} Datos de la licencia creada\n     */\n    crearLicencia(licenciaData) {\n        // Validación de campos requeridos se realiza en el API endpoint\n\n        // Verificar si es una licencia de salud ocupacional para incluir diagnóstico\n        let salud_ocupacional = [\n            1, 2, 3, 4, 7, 8, 11, 21, 22, 38, 40, 39, 38, 37,\n        ];\n\n        return apiClient\n            .post('/api/licencias/complete', licenciaData)\n            .then((response) => {\n                // Si hay un diagnóstico y es una licencia de salud ocupacional\n                if (\n                    salud_ocupacional.includes(\n                        licenciaData[0].idtipoLicencia,\n                    ) &&\n                    licenciaData[4]?.codigo !== ''\n                ) {\n                    const licencia_id = response.data.data.idlicencia;\n                    const formData = licenciaData[4];\n\n                    // Subir diagnóstico\n                    return apiClient\n                        .post(\n                            `/api/diagnosticos/licencia/${licencia_id}`,\n                            formData,\n                            {\n                                headers: {\n                                    'Content-Type': 'multipart/form-data',\n                                },\n                            },\n                        )\n                        .then(() => response.data);\n                }\n\n                return response.data;\n            })\n            .catch((error) => handleError(error, 'Error al crear la licencia'));\n    },\n\n    /**\n     * Actualiza una licencia existente\n     * @memberof LicenciaApi\n     * @param {number|string} id - ID de la licencia\n     * @param {Object} licenciaData - Datos actualizados\n     * @returns {Promise<Object>} Datos de la licencia actualizada\n     */\n    actualizarLicencia(id, licenciaData) {\n        if (!id) throw new Error('Se requiere el ID de la licencia');\n\n        // Verificar si es una licencia de salud ocupacional para actualizar diagnóstico\n        let salud_ocupacional = [\n            1, 2, 3, 4, 7, 8, 11, 21, 22, 38, 40, 39, 38, 37,\n        ];\n\n        return apiClient\n            .put(`/api/licencias/${id}`, licenciaData)\n            .then((response) => {\n                // Si hay un diagnóstico y es una licencia de salud ocupacional\n                if (\n                    salud_ocupacional.includes(\n                        licenciaData[0].idtipoLicencia,\n                    ) &&\n                    licenciaData[4]?.codigo !== ''\n                ) {\n                    const formData = licenciaData[4];\n\n                    // Actualizar diagnóstico\n                    return apiClient\n                        .put(`/api/diagnosticos/licencia/${id}`, formData, {\n                            headers: { 'Content-Type': 'multipart/form-data' },\n                        })\n                        .then(() => response.data);\n                }\n\n                return response.data;\n            })\n            .catch((error) =>\n                handleError(error, `Error al actualizar la licencia ${id}`),\n            );\n    },\n\n    /**\n     * Realiza el primer visado de múltiples licencias\n     * @memberof LicenciaApi\n     * @param {Object} data - Datos para el visado masivo\n     * @returns {Promise<Object>} Resultado de la operación\n     */\n    primerVisadoTodo(data) {\n        return apiClient\n            .put('/api/licencias/masivo/primer', data)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al realizar el primer visado masivo'),\n            );\n    },\n\n    /**\n     * Realiza el segundo visado de múltiples licencias\n     * @memberof LicenciaApi\n     * @param {Object} data - Datos para el visado masivo\n     * @returns {Promise<Object>} Resultado de la operación\n     */\n    segundoVisadoTodo(data) {\n        return apiClient\n            .put('/api/licencias/masivo/segundo', data)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(\n                    error,\n                    'Error al realizar el segundo visado masivo',\n                ),\n            );\n    },\n\n    /**\n     * Desvisar una licencia\n     * @memberof LicenciaApi\n     * @param {Object} licencia - Licencia a desvisar\n     * @returns {Promise<Object>} Licencia actualizada\n     */\n    desvisarLicencia(licencia) {\n        if (!licencia.idlicencia)\n            throw new Error('Se requiere el ID de la licencia');\n\n        return apiClient\n            .put(`/api/licencias/desvisar/${licencia.idlicencia}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al desvisar la licencia'),\n            );\n    },\n\n    /**\n     * Cambia el estado de una licencia\n     * @memberof LicenciaApi\n     * @param {number|string} id - ID de la licencia\n     * @param {string} nuevoEstado - Nuevo estado de la licencia\n     * @returns {Promise<Object>} Respuesta del servidor\n     */\n    cambiarEstadoLicencia(id, nuevoEstado) {\n        if (!id) throw new Error('Se requiere el ID de la licencia');\n        if (!nuevoEstado) throw new Error('Se requiere el nuevo estado');\n\n        return apiClient\n            .patch(`/licencias/${id}/estado`, { estado: nuevoEstado })\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(\n                    error,\n                    `Error al cambiar estado de la licencia ${id}`,\n                ),\n            );\n    },\n\n    /**\n     * Elimina una licencia\n     * @memberof LicenciaApi\n     * @param {number|string} id - ID de la licencia\n     * @returns {Promise<Object>} Respuesta del servidor\n     */\n    eliminarLicencia(id) {\n        if (!id) throw new Error('Se requiere el ID de la licencia');\n\n        return apiClient\n            .delete(`/api/licencias/${id}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, `Error al eliminar la licencia ${id}`),\n            );\n    },\n\n    /**\n     * Exporta licencias a Excel\n     * @memberof LicenciaApi\n     * @param {Object} data - Datos para la exportación\n     * @returns {Promise<Object>} Resultado de la exportación\n     */\n    exportXLS(data) {\n        return apiClient\n            .put('/api/licencias/exportar', data)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al exportar licencias a Excel'),\n            );\n    },\n\n    /**\n     * Obtiene días posibles de licencia para un agente\n     * @memberof LicenciaApi\n     * @param {number|string} idagente - ID del agente\n     * @returns {Promise<Object>} Días posibles de licencia\n     */\n    getDiasPosibles(idagente) {\n        if (!idagente) throw new Error('Se requiere el ID del agente');\n\n        return apiClient\n            .get(`/api/licencias/dias/${idagente}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener días posibles'),\n            );\n    },\n\n    /**\n     * Obtiene feriados\n     * @memberof LicenciaApi\n     * @returns {Promise<Object>} Lista de feriados\n     */\n    getFeriados() {\n        return apiClient\n            .get('/api/licencias/feriados')\n            .then((response) => response.data)\n            .catch((error) => handleError(error, 'Error al obtener feriados'));\n    },\n\n    /**\n     * Obtiene personas activas\n     * @memberof LicenciaApi\n     * @param {Array} arr - Array con parámetros\n     * @returns {Promise<Object>} Lista de personas activas\n     */\n    getPersonasActivas(arr) {\n        return apiClient\n            .get(`/api/licencias/personas/${arr[1]}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(error, 'Error al obtener personas activas'),\n            );\n    },\n\n    /**\n     * Obtiene personas discapacitadas activas\n     * @memberof LicenciaApi\n     * @param {number|string} idagente - ID del agente\n     * @returns {Promise<Object>} Lista de personas discapacitadas activas\n     */\n    getPersonasDiscapacitadaActivas(idagente) {\n        return apiClient\n            .get(`/api/licencias/personasDiscapacitada/${idagente}`)\n            .then((response) => response.data)\n            .catch((error) =>\n                handleError(\n                    error,\n                    'Error al obtener personas discapacitadas activas',\n                ),\n            );\n    },\n};\n"],"sourceRoot":""}